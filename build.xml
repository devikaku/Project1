<project name="Project1" basedir=".">
	<description>
A sample build file for this project
</description>
	<!-- global properties for this build file -->
	<property name="source.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="doc.dir" location="doc" />
	<property name="dist.dir" location="dist" />
	<property name="lib.dir" location="lib" />


	<target name="init" description="setup project directories">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${doc.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>
	
	  <path id="classpath.test">
	    <pathelement location="lib/junit.jar"/>
	    <pathelement location="lib/hamcrest-core-1.3.jar"/>
	    <pathelement location="${build.dir}"/>
	  </path>

	<!-- Compile the java code in ${src.dir} into ${build.dir} -->
	<target name="compile" depends="init" description="compile java sources">
		<javac srcdir="${source.dir}" destdir="${build.dir}">
	        <classpath refid="classpath.test"/>
	    </javac>
	</target>

	<!-- Generate javadocs for current project into ${doc.dir} -->
	<target name="doc" depends="init" description="generate documentation">
		<javadoc sourcepath="${source.dir}" destdir="${doc.dir}">
			<fileset dir="src" defaultexcludes="yes">
				<include name="*.java"/>
			</fileset>
		</javadoc>
	</target>

	<target name="dist" depends="compile"
	        description="generate the distribution">
		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar destfile="${dist.dir}/Project1.jar" basedir="${build.dir}"/>
	</target>

	<!-- Delete the build & doc directories and Emacs backup (*~) files -->
	<target name="clean" description="tidy up the workspace">
		<delete dir="${build.dir}" />
		<delete dir="${doc.dir}" />
		<delete dir="${dist.dir}" />
		<delete>
			<fileset defaultexcludes="no" dir="${source.dir}" includes="**/*~" />
		</delete>
	</target>
	
	  <target name="test" depends="compile">
	    <junit printsummary="on" haltonfailure="yes" fork="true">
	        <formatter type="brief" usefile="false" />
	        <classpath>
	          <path refid="classpath.test"/>
	          <pathelement location="${build.dir}"/>
	        </classpath>
	        <batchtest>
	            <fileset dir="${build.dir}">
	            	 <include name="**/*Test*" />
	            </fileset>
	        </batchtest>
	    </junit>
	  </target>
</project>